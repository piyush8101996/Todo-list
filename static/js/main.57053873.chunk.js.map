{"version":3,"sources":["components/List/List.module.css","components/Todolist/Todolist.module.css","components/Button/Button.module.css","components/Input/Input.module.css","pages/Home.module.css","App.module.css","components/Button/Button.jsx","components/Input/Input.jsx","components/List/List.jsx","components/Todolist/Todolist.jsx","pages/Home.jsx","App.js","index.js"],"names":["module","exports","Button","props","className","style","btn","onClick","onClickHandler","Input","input","type","placeholder","value","onChange","onChangeHandler","onKeyUp","onKeyHandler","List","console","log","list","map","itemObj","index","isDone","styles","doneItem","isEditing","listitem","itemName","onEditClickHandler","onDeleteClickHandler","onDoneClickHandler","swapListItemHandler","length","edit","editItemName","event","onEditInputChangeHandler","onEditSaveHandler","onEditCancelHandler","TodoList","useState","inputVal","setInputVal","setList","useEffect","todoList","localStorage","getItem","JSON","parse","stringify","setItem","buttonClickHandler","trim","push","box","userinput","target","onKeyUpHandler","key","itemIndex","splice","initIndex","finalIndex","tempItem","inputValue","editedValue","Home","home","App","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57053873.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"doneItem\":\"List_doneItem__2drgd\",\"list\":\"List_list__3qGvY\",\"listitem\":\"List_listitem__Pa-ur\",\"btn\":\"List_btn__2oxrp\",\"edit\":\"List_edit__2YTLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userinput\":\"Todolist_userinput__1uOQ-\",\"box\":\"Todolist_box__omKes\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1CUDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__epp9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__XyhkG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1NGXA\"};","import style from '../Button/Button.module.css'\r\nconst Button=(props)=>{\r\n    return(\r\n        <div >\r\n        <button className={style.btn}\r\n        onClick={props.onClickHandler}\r\n        >Add Task\r\n        </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Button;\r\n","import style from '../Input/Input.module.css'\r\nconst Input=(props)=>{\r\n    return(\r\n        <div >\r\n        <input className={style.input} type=\"text\" placeholder='Enter the task' value={props.value}\r\n        onChange={props.onChangeHandler} \r\n        onKeyUp={props.onKeyHandler}/>\r\n        </div>\r\n    );\r\n};\r\nexport default Input;","import styles from './List.module.css';\r\n\r\nconst List = (props) => {\r\n    console.log('List Component =======>>');\r\n    /*\r\n    ['a','b','c'] ==> [<li>a</li>, <li>b</li>, <li>c</li>];\r\n    1. Below function is used to convert array of string to array of jsx to show all \r\n    unorder list items.\r\n    2. Need to pass unique key props in array of jsx \r\n    */\r\n    const list = props.value.map((itemObj, index)=>{\r\n        return (\r\n            <li key={index} className={itemObj.isDone ? `${styles.doneItem}` : styles.list}>\r\n            \r\n                {!itemObj.isEditing && (\r\n                    <>\r\n                        <div >\r\n                            <b className={styles.listitem}>{itemObj.itemName}</b>\r\n                        </div>\r\n\r\n                        <button className={styles.btn} onClick={()=>{props.onEditClickHandler(index)}}> Edit </button>\r\n                        \r\n                        {/* Conditional rendering logic */}\r\n                        {itemObj.isDone && (\r\n                            <button className={styles.btn} onClick={ ()=>{props.onDeleteClickHandler(index)} }>\r\n                                Delete\r\n                            </button>\r\n                        )}\r\n\r\n                        {!itemObj.isDone && (\r\n                            <button className={styles.btn} onClick={ ()=>{props.onDoneClickHandler(index)} }>\r\n                                Done\r\n                            </button>\r\n                        )}\r\n\r\n                        {index !== 0 && (\r\n                            <button className={styles.btn} onClick={ ()=>{props.swapListItemHandler(index, index-1)}}>\r\n                            UP\r\n                            </button>\r\n                        )}\r\n                        \r\n                        {index !== (props.value.length-1) && (\r\n                            <button className={styles.btn} onClick={ ()=>{props.swapListItemHandler(index, index+1)}}>\r\n                                DOWN\r\n                            </button>\r\n                        )}\r\n                        \r\n                    </>\r\n                )}\r\n\r\n                {itemObj.isEditing && (\r\n                    <>\r\n                    <div>\r\n                        <input className={styles.edit}\r\n                            type=\"text\" \r\n                            value={itemObj.editItemName} \r\n                            onChange={(event)=>{\r\n                                props.onEditInputChangeHandler(index, event);\r\n                            }}/>\r\n                        <button className={styles.btn}\r\n                            onClick={()=>{props.onEditSaveHandler(index)}}>\r\n                            Save\r\n                        </button>\r\n                        <button className={styles.btn}\r\n                            onClick={()=>{props.onEditCancelHandler(index)}}>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                    </>\r\n                )}\r\n            </li>\r\n        );\r\n    });\r\n\r\n\r\n    return(\r\n        <ul>{list}</ul>\r\n    );\r\n};\r\n\r\nexport default List;","import { useEffect, useState } from 'react';\r\nimport Button from '../Button/Button';\r\nimport Input from '../Input/Input';\r\nimport List from '../List/List';\r\nimport style from '../Todolist/Todolist.module.css'\r\n\r\nconst TodoList = () => {\r\n\r\n    console.log('TodoList Component =======>>');\r\n\r\n    const [inputVal, setInputVal] = useState('');\r\n    const [list, setList] = useState([]); // array of objects\r\n\r\n    // componentDidMount\r\n    useEffect(()=>{\r\n        // To get the localStroage to get the todoList data\r\n        let todoList = localStorage.getItem('todoList');\r\n        if(todoList) {\r\n            todoList = JSON.parse(todoList); // String --> object\r\n            setList(todoList);\r\n        } \r\n        console.log('componentDidMount called====>>');\r\n    }, []);\r\n\r\n    // componentDidUpdate\r\n    useEffect(()=>{\r\n        const todoList = JSON.stringify(list); // Object --> String\r\n        localStorage.setItem('todoList',todoList);\r\n        console.log('list is updated !!!! ');\r\n    }, [list]);\r\n\r\n    // componentDidUpdate\r\n    useEffect(()=>{\r\n        console.log('inputVal is updated !!!! ');\r\n    }, [inputVal]);\r\n\r\n\r\n    const inputChangeHandler = (event) => {\r\n        const value = event.target.value;\r\n        // Updating the state is async by nature.\r\n        setInputVal(value);\r\n        //console.log('on input change =======>>',inputVal);\r\n    };\r\n\r\n    const inputKeyUpHandler = (event) => {\r\n        if(event.key === \"Enter\"){\r\n            buttonClickHandler();\r\n        }\r\n    };\r\n\r\n    const buttonClickHandler = () => {\r\n        if(inputVal.trim()){\r\n            const todoList = [...list];\r\n            // Creating the array of object to make scalable solution and store all data\r\n            todoList.push({\r\n                itemName: inputVal,\r\n                editItemName:inputVal,\r\n                isDone: false,\r\n                isEditing: false\r\n            });\r\n            setList(todoList);\r\n            setInputVal('');\r\n        } else {\r\n            setInputVal('');\r\n        }\r\n    };\r\n\r\n    const doneClickHandler = (itemIndex) => {\r\n        const todoList = [...list];\r\n        todoList[itemIndex].isDone = true;\r\n        setList(todoList);\r\n    };\r\n\r\n    const deleteClickHandler = (itemIndex) => {\r\n        const todoList = [...list];\r\n        todoList.splice(itemIndex, 1);\r\n        setList(todoList);\r\n    };\r\n\r\n    const swapListItem = (initIndex, finalIndex) => {\r\n        const todoList = [...list];\r\n        const tempItem = todoList[initIndex];\r\n        todoList[initIndex] = todoList[finalIndex];\r\n        todoList[finalIndex] = tempItem;\r\n        setList(todoList);\r\n    };\r\n\r\n    const onEditHandler = (itemIndex) => {\r\n        const todoList = [...list];\r\n        todoList[itemIndex].isEditing = true;\r\n        setList(todoList);\r\n    };\r\n\r\n    const onEditCancel = (itemIndex) => {\r\n        const todoList = [...list];\r\n        todoList[itemIndex].editItemName = todoList[itemIndex].itemName;\r\n        todoList[itemIndex].isEditing = false;\r\n        setList(todoList);\r\n    };\r\n\r\n    const onEditInputChange = (itemIndex, event) => {\r\n        const inputValue = event.target.value;\r\n        const todoList = [...list];\r\n        todoList[itemIndex].editItemName = inputValue;\r\n        setList(todoList);\r\n    };\r\n\r\n    const onEditSave = (itemIndex) => {\r\n        const todoList = [...list];\r\n        const editedValue = todoList[itemIndex].editItemName.trim();\r\n        if(editedValue){\r\n            todoList[itemIndex].itemName = editedValue;\r\n            todoList[itemIndex].editItemName = editedValue\r\n            todoList[itemIndex].isEditing = false;\r\n            setList(todoList);\r\n        }else {\r\n            todoList[itemIndex].editItemName = todoList[itemIndex].itemName;\r\n            todoList[itemIndex].isEditing = false;\r\n            setList(todoList);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>  \r\n          <div className={style.box}>\r\n            <div className={style.userinput}>\r\n            <Input \r\n                value={inputVal}\r\n                onChangeHandler={inputChangeHandler}\r\n                onKeyUpHandler={inputKeyUpHandler}/>\r\n                <Button \r\n                onClickHandler={buttonClickHandler}\r\n                />\r\n            </div>\r\n            <div>\r\n            <List \r\n                value={list}\r\n                onDoneClickHandler={doneClickHandler}\r\n                onDeleteClickHandler={deleteClickHandler}\r\n                swapListItemHandler={swapListItem}\r\n                onEditClickHandler={onEditHandler}\r\n                onEditCancelHandler={onEditCancel}\r\n                onEditInputChangeHandler={onEditInputChange}\r\n                onEditSaveHandler={onEditSave}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import TodoList from '../components/Todolist/Todolist.jsx';\r\nimport style from \"../pages/Home.module.css\"\r\n\r\nconst Home = () => {\r\n    console.log('Home Component =======>>');\r\n    return (\r\n    <>\r\n        <h3 className={style.home}>My To-Do-List</h3>\r\n        <TodoList />\r\n    </>\r\n)};\r\n\r\nexport default Home;","import Home from './pages/Home';\nimport styles from './App.module.css'\n\n\nfunction App() {\n \n  return (\n    \n    <div className={styles.app} >\n     <Home/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}